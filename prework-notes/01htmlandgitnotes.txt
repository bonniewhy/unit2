NOTES -----

HTML -----
-- <thead> Wrap your table heading in this.</thead>
-- <tbody> Wrap your table body in this.</tbody>
-- <tfoot> Wrap your table footer in this.</tfoot>

-- Can CSS style each of those above tags differently as
    needed!

GIT -----
-- git commit -m "Explain changes":
    -- Must be in quotation marks
    -- Written in present tense
    -- Should be breif (50 characters or less)

-- The "commit" you are currently on is known as the "HEAD"
    commit.

-- git reset HEAD <filename>
    -- takes a file away from the staging area, but doesn't
        discard local changes.

-- git checkout HEAD <filename>
    -- will restore the file in your working directory to look
        exactly as it did when you made the last commit.

-- git reset commit_SHA
    -- resets to a previous commit in your commit history
    -- you must do "git log" to find the first 7 letters of the SHA
        number for the given commit you'd like to revert back to

-- .gitignore file (from zellwk.com/blog/gitignore/)
    -- A file should be ignoredd if any of the following is true:
        -- The file is not used by your project
        -- The file is not used by anyone else in your team
        -- The file is generated by another process

    -- Common types of files to ignore --
        -- 1. Operating system files
            -- Files that are used by your operating system
                ex. "Thumbs.db" ".DS_Store"
            -- There are links included here on system files that should be
                ignored for Windows, Mac, and Linux.
        -- 2. Application files
            -- Files taht are used by applications you installed on your
                computer.
            -- For most developers, these files are usually generated by
                your code editor.
            -- GitHub has a recommended gitignore rules for a list of popular
                code editors.
        -- 3. Language and framework files
            -- Files that are generated (or required) by the languages and
                frameworks you use for your project
                ex. .sass-cache for Sass in CSS or npm-debug.log for Node
            -- GitHub has a list of recommended git ignore rules for this, too.
        -- 4. Files downloaded with package managers
            -- Tools to help you download libraries off the web quickly.
        -- 5. Credentials
            -- Are usernames and passwords. ex wp-config.php which has usernames
                and passwords for Wordpress databases.
        
    -- Global gitignore file
        -- Contains rules for ignoring files for every Git repository on your
            computer.
            -- good for Operating System files and Application files
    

    